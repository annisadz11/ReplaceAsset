﻿﻿@{
    ViewData["Title"] = "Approval New Hires";
}

<link href="~/vendor/bootstrap-table/bootstrap-table.min.css" rel="stylesheet" />
<link href="~/vendor/bootstrap-table/bootstrap-table-sticky-header.css" rel="stylesheet" />
<link href="~/vendor/bootstrap-daterangepicker/daterangepicker.css" rel="stylesheet" />

<div class="row gutters mt-4">
    <div class="card">
        <div class="card-header text-center" style="font-size: 1.25rem;">Approval New Hires</div>
        <hr class="m-0" />
        <div class="card-body">
            <!-- Breadcrumb -->
            <partial name="_Breadcrumb" />
            <!-- Date Range Picker -->
            <div class="input-group mb-3">
                <span class="input-group-text">Filter by Date</span>
                <input type="text" id="dateRangePicker" class="form-control">
                <button id="applyDateFilter" class="btn btn-primary">Apply</button>
                <button id="resetDateFilter" class="btn btn-secondary">Reset Filter</button>
            </div>
            <!-- Toolbar -->
            <table id="table"
                   data-toggle="table"
                   data-locale="en-US"
                   data-sticky-header="true"
                   data-sticky-header-offset-y="60"
                   data-search="true"
                   data-toolbar="#toolbar"
                   data-search-highlight="true"
                   data-search-align="right"
                   data-show-toggle="true"
                   data-show-refresh="true"
                   data-show-columns="true"
                   data-buttons="[]"
                   data-key-events="true"
                   data-url="@Url.Action("GetData", "NewHireApproval")"
                   data-pagination="true"
                   data-show-columns-toggle-all="true"
                   data-page-size="10"
                   data-filter-control="true">
                <thead>
                    <tr>
                        <th data-field="name" data-sortable="true" data-width="200">Name</th>
                        <th data-field="department" data-sortable="true" data-width="150">Department</th>
                        <th data-field="designation" data-sortable="true" data-width="100">Designation</th>
                        <th data-field="serialNumber" data-sortable="true" data-width="150">Serial Number</th>
                        <th data-field="device" data-sortable="true" data-width="150">Device</th>
                        <th data-field="modelAsset" data-sortable="true" data-width="150">Model Asset</th>
                        <th data-field="dateOfJoin" data-sortable="true" data-width="150">Date Of Join</th>
                        <th data-field="statusCompleted" data-sortable="true" data-formatter="statusFormatter" class="text-center" data-width="150">Status Completed</th>
                        <th data-formatter="actionFormatter" class="text-center no-space-three text-nowrap" data-width="100">Actions</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<!-- Modal Checklist Asset New Hire -->
<div class="modal fade" id="updateModal" tabindex="-1" aria-labelledby="updateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateModalLabel">Asset Check for New Hires</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="updateForm">
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="headsetGiven" name="headsetGiven">
                        <label class="form-check-label" for="headsetGiven">Headset</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="laptopGiven" name="laptopGiven">
                        <label class="form-check-label" for="laptopGiven">Laptop</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="adaptorGiven" name="adaptorGiven">
                        <label class="form-check-label" for="adaptorGiven">Adaptor</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="powerCableGiven" name="powerCableGiven">
                        <label class="form-check-label" for="powerCableGiven">Power Cable</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="bagGiven" name="bagGiven">
                        <label class="form-check-label" for="bagGiven">Bag</label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" id="confirmUpdateBtn">Update</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/vendor/bootstrap-table/bootstrap-table.min.js"></script>
    <script src="~/vendor/bootstrap-table/bootstrap-table-sticky-header.min.js"></script>
    <script src="~/vendor/bootstrap-table/bootstrap-table-filter-control.min.js"></script>
    <script src="~/vendor/notyf/notyf.min.js"></script>
    <script src="~/vendor/sweetalert2/sweetalert2.all.min.js"></script>
    <script src="~/vendor/moment/moment.min.js"></script>
    <script src="~/vendor/bootstrap-daterangepicker/daterangepicker.js"></script>
    <script>
        // Initialize date range picker
        $(function () {
            $('#dateRangePicker').daterangepicker({
                locale: {
                    format: 'DD MMM YYYY' // Format tanggal dd MMM YYYY
                },
                startDate: moment().startOf('month'),
                endDate: moment().endOf('month')
            });
        });

        $('#applyDateFilter').on('click', function () {
            var range = $('#dateRangePicker').val().split(' - ');
            $('#table').bootstrapTable('refresh', {
                query: {
                    startDate: range[0],
                    endDate: range[1]
                }
            });
        });

        $('#resetDateFilter').on('click', function () {
            $('#dateRangePicker').data('daterangepicker').setStartDate(moment().startOf('month'));
            $('#dateRangePicker').data('daterangepicker').setEndDate(moment().endOf('month'));
            $('#dateRangePicker').val(''); // Mengosongkan nilai date range picker
            $('#table').bootstrapTable('refresh', {
                query: {
                    startDate: '',
                    endDate: ''
                }
            });
        });

        function statusFormatter(value, row, index) {
            var checklist = `
                                        <ul class="list-unstyled mb-0">
                                            <li><i class="fas fa-check-circle text-success"></i> Headset: ${row.headsetGiven ? 'Yes' : 'No'}</li>
                                            <li><i class="fas fa-check-circle text-success"></i> Laptop: ${row.laptopGiven ? 'Yes' : 'No'}</li>
                                            <li><i class="fas fa-check-circle text-success"></i> Adaptor: ${row.adaptorGiven ? 'Yes' : 'No'}</li>
                                            <li><i class="fas fa-check-circle text-success"></i> Power Cable: ${row.powerCableGiven ? 'Yes' : 'No'}</li>
                                            <li><i class="fas fa-check-circle text-success"></i> Bag: ${row.bagGiven ? 'Yes' : 'No'}</li>
                                        </ul>
                                    `;
            if (value) {
                return `<span class="badge rounded-pill text-bg-success" data-bs-toggle="popover" data-bs-html="true" title="Checklist" data-bs-content="${checklist.replace(/"/g, '&quot;')}">Done Deploy</span>`;
            } else {
                return '<span class="badge rounded-pill text-bg-warning">Waiting for Deploy</span>';
            }
        }

        function actionFormatter(value, row, index) {
            var updateBtn = '<button class="btn btn-sm btn-primary" onclick="showUpdateModal(' + row.id + ')">Update</button>';
            var detailsBtn = '<a href="@Url.Action("Details", "NewHires")/' + row.id + '" class="btn btn-sm btn-dark">Details</a>';
            return updateBtn + ' ' + detailsBtn;
        }

        function showUpdateModal(id) {
            $('#confirmUpdateBtn').data('id', id);
            $('#updateModal').modal('show');
        }

        $(function () {
            var $table = $('#table');

            if (!$table.data('bootstrap.table')) {
                $table.bootstrapTable({
                    url: '@Url.Action("GetData", "NewHireApproval")',
                    pageSize: 50,
                    columns: [
                        {
                            field: 'name',
                            title: 'Name',
                            sortable: true,
                            width: 150
                        },
                        {
                            field: 'department',
                            title: 'Department',
                            sortable: true,
                            width: 150
                        },
                        {
                            field: 'designation',
                            title: 'Designation',
                            sortable: true,
                            width: 150
                        },
                        {
                            field: 'serialNumber',
                            title: 'Serial Number',
                            sortable: true,
                            width: 150
                        },
                        {
                            field: 'device',
                            title: 'Device',
                            sortable: true,
                            width: 100
                        },
                        {
                            field: 'modelAsset',
                            title: 'Model Asset',
                            sortable: true,
                            width: 150
                        },
                        {
                            field: 'dateOfJoin',
                            title: 'Date Of Join',
                            sortable: true,
                            width: 150
                        },
                        {
                            field: 'statusCompleted',
                            title: 'Status Completed',
                            sortable: true,
                            formatter: 'statusFormatter',
                            width: 150
                        },
                        {
                            field: 'actions',
                            title: 'Actions',
                            formatter: 'actionFormatter',
                            width: 100
                        }
                    ]
                });
            }

            // Inisialisasi popover saat halaman selesai dimuat
            $('body').on('mouseenter', '[data-bs-toggle="popover"]', function () {
                $(this).popover('show');
            });

            $('body').on('mouseleave', '[data-bs-toggle="popover"]', function () {
                $(this).popover('hide');
            });

            $('#confirmUpdateBtn').click(function () {
                // Mengambil nilai dari checkbox
                var headsetGiven = $('#headsetGiven').prop('checked');
                var laptopGiven = $('#laptopGiven').prop('checked');
                var adaptorGiven = $('#adaptorGiven').prop('checked');
                var powerCableGiven = $('#powerCableGiven').prop('checked');
                var bagGiven = $('#bagGiven').prop('checked');

                // Memeriksa apakah setidaknya satu checkbox dicentang
                var isAtLeastOneChecked = headsetGiven || laptopGiven || adaptorGiven || powerCableGiven || bagGiven;

                if (!isAtLeastOneChecked) {
                    // Jika tidak ada checkbox yang dicentang
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'You have not selected any item. Do you want to proceed?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, update',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Jika user mengonfirmasi, lakukan update
                            updateData(headsetGiven, laptopGiven, adaptorGiven, powerCableGiven, bagGiven);
                        }
                    });
                } else {
                    // Jika ada checkbox yang dicentang, lakukan update langsung
                    updateData(headsetGiven, laptopGiven, adaptorGiven, powerCableGiven, bagGiven);
                }
            });

            function updateData(headsetGiven, laptopGiven, adaptorGiven, powerCableGiven, bagGiven) {
                // Panggil endpoint API untuk update data
                var data = {
                    headsetGiven: headsetGiven,
                    laptopGiven: laptopGiven,
                    adaptorGiven: adaptorGiven,
                    powerCableGiven: powerCableGiven,
                    bagGiven: bagGiven
                };

                $.ajax({
                    url: `/NewHireApproval/UpdateStatus/${$('#confirmUpdateBtn').data('id')}`, // Gunakan ID konstruktor dinamis
                    type: 'POST',
                    data: JSON.stringify(data),
                    contentType: 'application/json',
                    success: function () {
                        // Update berhasil
                        Swal.fire('Success', 'Data has been updated.', 'success').then(() => {
                            $('#updateModal').modal('hide'); // Tutup modal
                            $('#table').bootstrapTable('refresh'); // Refresh tabel
                        });
                    },
                    error: function () {
                        // Update gagal
                        Swal.fire('Error', 'Failed to update data.', 'error');
                    }
                });
            }
        });

        var notyf = new Notyf({
            position: {
                x: 'center',
                y: 'top',
            },
            duration: 3000,
            dismissible: true,
            types: [
                {
                    type: 'success',
                    background: 'green',
                    icon: false
                },
                {
                    type: 'error',
                    background: 'red',
                    icon: false
                }
            ]
        });

        if (new URLSearchParams(window.location.search).has('returnFromEdit')) {
            notyf.success('Data New Hire updated successfully!');
        }
    </script>
}
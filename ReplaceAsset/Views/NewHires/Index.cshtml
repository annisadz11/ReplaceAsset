@{
    ViewData["Title"] = "New Hires";
}

<link href="~/vendor/bootstrap-table/bootstrap-table.min.css" rel="stylesheet" />
<link href="~/vendor/bootstrap-table/bootstrap-table-sticky-header.css" rel="stylesheet" />

<div class="row gutters mt-4">
    <div class="card">
        <div class="card-header text-center" style="font-size: 1.0rem;">Form Asset New Hire</div>
        <hr class="m-0" />
        <div class="card-body">
            <!-- Breadcrumb -->
            <partial name="_Breadcrumb" />
            <!-- Toolbar -->
            <div id="toolbar">
                <div class="btn-group me-2">
                    @if (User.IsInRole("UserAdmin") || User.IsInRole("UserEmployee") || User.IsInRole("UserIntern"))
                    {
                        <a class="btn btn-primary" asp-action="Create">Add New Request</a>
                    }
                </div>
            </div>
            <table id="table"
                   data-toggle="table"
                   data-locale="en-US"
                   data-sticky-header="true"
                   data-sticky-header-offset-y="60"
                   data-search="true"
                   data-toolbar="#toolbar"
                   data-search-highlight="true"
                   data-search-align="right"
                   data-show-toggle="true"
                   data-show-refresh="true"
                   data-show-columns="true"
                   data-buttons="[]"
                   data-key-events="true"
                   data-url="@Url.Action("GetData", "NewHires")"
                   data-pagination="true"
                   data-show-columns-toggle-all="true"
                   data-pagination-loop="false"
                   data-pagination-pre-text="Previous"
                   data-pagination-next-text="Next"
                   data-page-size="50"
                   data-filter-control="true">
                <thead>
                    <tr>
                        <th data-field="name" data-sortable="true" data-width="200">Name</th>
                        <th data-field="department" data-sortable="true" data-width="150">Department</th>
                        <th data-field="designation" data-sortable="true" data-width="100">Designation</th>
                        <th data-field="serialNumber" data-sortable="true" data-width="150">Serial Number</th>
                        <th data-field="device" data-sortable="true" data-width="150">Device</th>
                        <th data-field="modelAsset" data-sortable="true" data-width="150">Model Asset</th>
                        <th data-field="dateOfJoin" data-sortable="true" data-width="150">Date Of Join</th>
                        <th data-field="statusCompleted" data-sortable="true" data-formatter="statusFormatter" class="text-center" data-width="150">Status Completed</th>
                        <th data-formatter="actionFormatter" class="text-center no-space-three text-nowrap" data-width="100">Actions</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/vendor/bootstrap-table/bootstrap-table.min.js"></script>
    <script src="~/vendor/bootstrap-table/bootstrap-table-sticky-header.min.js"></script>
    <script src="~/vendor/bootstrap-table/bootstrap-table-filter-control.min.js"></script>
    <script src="~/vendor/notyf/notyf.min.js"></script>
	<script src="~/vendor/sweetalert2/sweetalert2.min.js"></script>
    <script>
        function statusFormatter(value, row, index) {
            var checklist = `
                        <ul class="list-unstyled mb-0">
                            <li><i class="fas fa-check-circle text-success"></i> Headset: ${row.headsetGiven ? 'Yes' : 'No'}</li>
                            <li><i class="fas fa-check-circle text-success"></i> Laptop: ${row.laptopGiven ? 'Yes' : 'No'}</li>
                            <li><i class="fas fa-check-circle text-success"></i> Adaptor: ${row.adaptorGiven ? 'Yes' : 'No'}</li>
                            <li><i class="fas fa-check-circle text-success"></i> Power Cable: ${row.powerCableGiven ? 'Yes' : 'No'}</li>
                            <li><i class="fas fa-check-circle text-success"></i> Bag: ${row.bagGiven ? 'Yes' : 'No'}</li>
                        </ul>
                    `;
            if (value) {
                return `<span class="badge rounded-pill text-bg-success" data-bs-toggle="popover" data-bs-html="true" title="Checklist" data-bs-content="${checklist.replace(/"/g, '&quot;')}">Done Deploy</span>`;
            } else {
                return '<span class="badge rounded-pill text-bg-warning">Waiting for Deploy</span>';
            }
        }
        // Tetapkan variabel di sini untuk menentukan peran pengguna
        var isAdminOrIntern = @Html.Raw(Json.Serialize(User.IsInRole("UserAdmin") || User.IsInRole("UserIntern")));
        var isManagerIT = @Html.Raw(Json.Serialize(User.IsInRole("UserManagerIT")));
        var isEmployee = @Html.Raw(Json.Serialize(User.IsInRole("UserEmployee")));

        function actionFormatter(value, row, index) {
            var editUrl = '@Url.Action("Edit", "NewHires")' + '/' + row.id;
            var deleteUrl = '@Url.Action("Delete", "NewHires")' + '/' + row.id;
            var detailsUrl = '@Url.Action("Details", "NewHires")' + '/' + row.id;

            var editBtn = '<a href="' + editUrl + '" class="btn btn-sm btn-primary">Edit</a>';
            var deleteBtn = '<button class="btn btn-sm btn-danger" onclick="confirmDelete(' + row.id + ')">Delete</button>';
            var detailsBtn = '<a href="' + detailsUrl + '" class="btn btn-sm btn-info">Details</a>';

            if (isAdminOrIntern) {
                return detailsBtn + ' ' + editBtn + ' ' + deleteBtn;
            } else if (isManagerIT) {
                return detailsBtn + ' ' + deleteBtn;
            }
            return detailsBtn;
        }
        $(function () {
            var $table = $('#table');

            // Periksa apakah tabel sudah diinisialisasi sebelumnya
            if (!$table.data('bootstrap.table')) {
                $table.bootstrapTable({
                    url: '@Url.Action("GetData", "NewHires")',
                    pageSize: 50,
                    columns: [
                        {
                            field: 'name',
                            title: 'Name',
                            sortable: true,
                            width: 100
                        },
                        {
                            field: 'department',
                            title: 'Department',
                            sortable: true,
                            width: 100
                        },
                        {
                            field: 'designation',
                            title: 'Designation',
                            sortable: true,
                            width: 100
                        },
                        {
                            field: 'serialNumber',
                            title: 'Serial Number',
                            sortable: true,
                            width: 100
                        },
                        {
                            field: 'device',
                            title: 'Device',
                            sortable: true,
                            width: 100
                        },
                        {
                            field: 'modelAsset',
                            title: 'Model Asset',
                            sortable: true,
                            width: 150
                        },
                        {
                            field: 'dateOfJoin',
                            title: 'Date Of Join',
                            sortable: true,
                            width: 150
                        },
                        {
                            field: 'statusCompleted',
                            title: 'Status Completed',
                            sortable: true,
                            formatter: 'statusFormatter',
                            width: 150
                        },
                        {
                            field: 'actions',
                            title: 'Actions',
                            formatter: 'actionFormatter',
                            width: 100
                        }
                    ]
                });
            }

            // Initialize popover when the page is loaded
            $('body').on('mouseenter', '[data-bs-toggle="popover"]', function () {
                $(this).popover('show');
            });

            $('body').on('mouseleave', '[data-bs-toggle="popover"]', function () {
                $(this).popover('hide');
            });
        });

        // Notyf instance
        var notyf = new Notyf({
            position: {
                x: 'center',
                y: 'top',
            },
            duration: 3000,
            dismissible: true,
            types: [
                {
                    type: 'success',
                    background: 'green',
                    icon: false
                },
                {
                    type: 'error',
                    background: 'red',
                    icon: false
                }
            ]
        });

        // Check if the query parameter returnFromEdit exists in URL
        if (new URLSearchParams(window.location.search).has('returnFromEdit')) {
            notyf.success('Data New Hire updated successfully!');
        }

     </script>
}
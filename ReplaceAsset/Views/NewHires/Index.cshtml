@{
    ViewData["Title"] = "New Hires";
}

<link href="~/vendor/bootstrap-table/bootstrap-table.min.css" rel="stylesheet" />
<link href="~/vendor/bootstrap-table/bootstrap-table-sticky-header.css" rel="stylesheet" />
<link href="~/vendor/bootstrap-daterangepicker/daterangepicker.css" rel="stylesheet" />

<div class="row gutters mt-4">
    <div class="card">
        <div class="card-header text-center" style="font-size: 1.25rem;">Asset New Hire</div>
        <hr class="m-0" />
        <div class="card-body">
            <!-- Breadcrumb -->
            <partial name="_Breadcrumb" />
            <!-- Date Range Picker -->
            <div class="input-group mb-3">
                <span class="input-group-text">Filter by Date</span>
                <input type="text" id="dateRangePicker" class="form-control">
                <button id="applyDateFilter" class="btn btn-primary">Apply</button>
                <button id="resetDateFilter" class="btn btn-secondary">Reset Filter</button>
            </div>
            <!-- Toolbar -->
            <div id="toolbar" class="d-flex">
                <div class="btn-group me-2">
                    @if (User.IsInRole("UserAdmin") || User.IsInRole("UserManagerIT") || User.IsInRole("UserIntern"))
                    {
                        <a class="btn btn-success me-2" asp-action="Create">Add New</a>
                        <button id="exportPdfBtn" class="btn btn-info me-2">PDF</button>
                        <button id="exportExcelBtn" class="btn btn-primary me-2">Excel</button>
                        <button id="deleteSelectedBtn" class="btn btn-danger">Delete Selected</button>
                    }
                </div>
            </div>
            <table id="table"
                   data-toggle="table"
                   data-locale="en-US"
                   data-sticky-header="true"
                   data-sticky-header-offset-y="60"
                   data-search="true"
                   data-toolbar="#toolbar"
                   data-search-highlight="true"
                   data-search-align="right"
                   data-show-toggle="true"
                   data-show-refresh="true"
                   data-show-columns="true"
                   data-buttons="[]"
                   data-key-events="true"
                   data-url="@Url.Action("GetData", "NewHires")"
                   data-pagination="true"
                   data-show-columns-toggle-all="true"
                   data-side-pagination="server"
                   data-pagination-layout="bottom"
                   data-pagination-next-text="Next"
                   data-pagination-pre-text="Previous"
                   data-page-list="[10, 25, 50, 100, All]"
                   data-pagination-loop="false"
                   data-page-size="50"
                   data-filter-control="true">
                <thead>
                    <tr>
                        <th data-field="name" data-sortable="true" data-width="200">Name</th>
                        <th data-field="department" data-sortable="true" data-width="150">Department</th>
                        <th data-field="designation" data-sortable="true" data-width="100">Designation</th>
                        <th data-field="serialNumber" data-sortable="true" data-width="150">Serial Number</th>
                        <th data-field="device" data-sortable="true" data-width="150">Device</th>
                        <th data-field="modelAsset" data-sortable="true" data-width="150">Model Asset</th>
                        <th data-field="dateOfJoin" data-sortable="true" data-width="150">Date Of Join</th>
                        <th data-field="statusCompleted" data-sortable="true" data-formatter="statusFormatter" class="text-center" data-width="150">Status Completed</th>
                        <th data-formatter="actionFormatter" class="text-center no-space-three text-nowrap" data-width="100">Actions</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<!-- Modal for PDF Export -->
<div class="modal fade" id="pdfModal" tabindex="-1" role="dialog" aria-labelledby="pdfModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="pdfModalLabel">Export Data New Hire to PDF</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="pdfForm">
                    <div class="form-group">
                        <label for="statusPdfDropdown">Select status to export:</label>
                        <select id="statusPdfDropdown" class="form-select">
                            <option value="done">Done Deploy</option>
                            <option value="waiting">Waiting for Deploy</option>
                            <option value="all">All</option> <!-- Tambahkan opsi ini -->
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmPdfBtn" class="btn btn-info">Export PDF</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal for Delete -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Selected Data New Hires</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="deleteForm">
                    <div class="form-group">
                        <label for="statusDropdown">Select status to delete:</label>
                        <select id="statusDropdown" class="form-select">
                            <option value="done">Done Deploy</option>
                            <option value="waiting">Waiting for Deploy</option>
                            <option value="all">All</option><!-- Tambahkan opsi ini -->
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmDeleteBtn" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/vendor/bootstrap-table/bootstrap-table.min.js"></script>
    <script src="~/vendor/bootstrap-table/bootstrap-table-sticky-header.min.js"></script>
    <script src="~/vendor/bootstrap-table/bootstrap-table-filter-control.min.js"></script>
    <script src="~/vendor/notyf/notyf.min.js"></script>
    <script src="~/vendor/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/vendor/bootstrap-daterangepicker/moment.min.js"></script>
    <script src="~/vendor/bootstrap-daterangepicker/daterangepicker.js"></script>
    <script src="~/vendor/jspdf-autotable/jspdf.umd.min.js"></script>
    <script src="~/vendor/jspdf-autotable/jspdf.plugin.autotable.js"></script>

    <script>
        // Notyf instance
        var notyf = new Notyf({
            position: {
                x: 'center',
                y: 'top',
            },
            duration: 3000,
            dismissible: true,
            types: [
                {
                    type: 'success',
                    background: 'green',
                    icon: false
                },
                {
                    type: 'error',
                    background: 'red',
                    icon: false
                }
            ]
        });

        // Check if the query parameter returnFromEdit exists in URL
        if (new URLSearchParams(window.location.search).has('returnFromEdit')) {
            notyf.success('Data New Hire updated successfully!');
        }

        // Script to check TempData["SuccessMessage"]
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                $(document).ready(function () {
                    notyf.success('@TempData["SuccessMessage"]');
                });
            </text>
        }

            // Initialize date range picker
            $(function () {
                $('#dateRangePicker').daterangepicker({
                    locale: {
                        format: 'DD MMM YYYY' // Format tanggal dd MMM YYYY
                    },
                    startDate: moment().startOf('month'),
                    endDate: moment().endOf('month')
                });
            });

        $('#applyDateFilter').on('click', function () {
            var range = $('#dateRangePicker').val().split(' - ');
            $('#table').bootstrapTable('refresh', {
                query: {
                    startDate: range[0],
                    endDate: range[1]
                }
            });
        });

        $('#resetDateFilter').on('click', function () {
            $('#dateRangePicker').val(''); // Mengosongkan nilai date range picker
            $('#table').bootstrapTable('refresh', {
                query: {
                    startDate: '',
                    endDate: ''
                }
            });
        });

        function statusFormatter(value, row, index) {
            var checklist = `
                <ul class="list-unstyled mb-0">
                    <li><i class="fas fa-check-circle text-success"></i> Headset: ${row.headsetGiven ? 'Yes' : 'No'}</li>
                    <li><i class="fas fa-check-circle text-success"></i> Laptop: ${row.laptopGiven ? 'Yes' : 'No'}</li>
                    <li><i class="fas fa-check-circle text-success"></i> Adaptor: ${row.adaptorGiven ? 'Yes' : 'No'}</li>
                    <li><i class="fas fa-check-circle text-success"></i> Power Cable: ${row.powerCableGiven ? 'Yes' : 'No'}</li>
                    <li><i class="fas fa-check-circle text-success"></i> Bag: ${row.bagGiven ? 'Yes' : 'No'}</li>
                </ul>
            `;
            if (value) {
                return `<span class="badge rounded-pill text-bg-success" data-bs-toggle="popover" data-bs-html="true" title="Checklist" data-bs-content="${checklist.replace(/"/g, '&quot;')}">Done Deploy</span>`;
            } else {
                return '<span class="badge rounded-pill text-bg-warning">Waiting for Deploy</span>';
            }
        }

        // Tetapkan variabel di sini untuk menentukan peran pengguna
        var isAdminOrIntern = @Html.Raw(Json.Serialize(User.IsInRole("UserAdmin") || User.IsInRole("UserIntern")));
        var isManagerIT = @Html.Raw(Json.Serialize(User.IsInRole("UserManagerIT")));
        var isEmployee = @Html.Raw(Json.Serialize(User.IsInRole("UserEmployee")));

        function actionFormatter(value, row, index) {
            var editUrl = '@Url.Action("Edit", "NewHires")' + '/' + row.id;
            var detailsUrl = '@Url.Action("Details", "NewHires")' + '/' + row.id;
            var deleteUrl = '@Url.Action("Delete", "NewHires")' + '/' + row.id;

            var editBtn = '<a href="' + editUrl + '" class="btn btn-sm btn-info">Edit</a>';
            var detailsBtn = '<a href="' + detailsUrl + '" class="btn btn-sm btn-dark">Details</a>';
            var deleteBtn = '<button class="btn btn-sm btn-danger" onclick="deleteNewHire(' + row.id + ')">Delete</button>';

            if (isAdminOrIntern) {
                return detailsBtn + ' ' + editBtn + ' ' + deleteBtn;
            } else if (isManagerIT) {
                return detailsBtn;
            } else {
                return '';
            }
        }

        function deleteNewHire(id) {
            Swal.fire({
                title: 'Are you sure you want to delete the selected this data?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("Delete", "NewHires")',
                        type: 'POST',
                        data: { id: id },
                        success: function (data) {
                            if (data.success) {
                                notyf.success(data.message);
                                $('#table').bootstrapTable('refresh');
                            } else {
                                notyf.error(data.message);
                            }
                        },
                        error: function () {
                            notyf.error('An error occurred while deleting the data new hires.');
                        }
                    });
                }
            });
        }

        document.getElementById('exportExcelBtn').addEventListener('click', function () {
            window.location.href = '@Url.Action("ExportToExcel", "NewHires")';
        });

        // Permintaan Ekspor PDF Hanya untuk Admin, Manager IT dan Intern
        if (isAdminOrIntern || isManagerIT ) {
            document.getElementById('exportPdfBtn').addEventListener('click', function () {
                $('#pdfModal').modal('show');
            });

            document.getElementById('confirmPdfBtn').addEventListener('click', function () {
                var status = $('#statusPdfDropdown').val();
                var { jsPDF } = window.jspdf;
                var doc = new jsPDF();
                $.ajax({
                    url: '@Url.Action("GetDataByStatus", "NewHires")',
                    type: 'GET',
                    data: { status: status },
                    success: function (data) {
                        if (data && data.length > 0) {
                            doc.autoTable({
                                head: [['Name', 'Department', 'Designation', 'Serial Number', 'Device', 'Model Asset', 'Date Of Join', 'Status']],
                                body: data.map(request => [
                                    request.name,
                                    request.department,
                                    request.designation,
                                    request.serialNumber,
                                    request.device,
                                    request.modelAsset,
                                    request.dateOfJoin,
                                    request.statusCompleted ? 'Done Deploy' : 'Waiting for Deploy'
                                ])
                            });
                            doc.save('New Hires - ' + status + '.pdf');
                        } else {
                            Swal.fire('No Data!', 'No new hires found with the selected status.', 'warning');
                        }
                        $('#pdfModal').modal('hide');
                    },
                    error: function () {
                        Swal.fire('Error!', 'An error occurred while fetching the data.', 'error');
                        $('#pdfModal').modal('hide');
                    }
                });
            });
        }

        $(function () {
            var $table = $('#table');

            // Initialize table
            if (!$table.data('bootstrap.table')) {
                $table.bootstrapTable({
                    url: '@Url.Action("GetData", "NewHires")',
                    pageSize: 50,
                    columns: [
                        { field: 'state', checkbox: true },
                        { field: 'name', title: 'Name', sortable: true, width: 200 },
                        { field: 'department', title: 'Department', sortable: true, width: 150 },
                        { field: 'designation', title: 'Designation', sortable: true, width: 100 },
                        { field: 'serialNumber', title: 'Serial Number', sortable: true, width: 150 },
                        { field: 'device', title: 'Device', sortable: true, width: 150 },
                        { field: 'modelAsset', title: 'Model Asset', sortable: true, width: 150 },
                        { field: 'dateOfJoin', title: 'Date Of Join', sortable: true, width: 150 },
                        { field: 'statusCompleted', title: 'Status Completed', formatter: 'statusFormatter', width: 150, align: 'center' },
                        { field: 'actions', title: 'Actions', formatter: 'actionFormatter', width: 100, align: 'center' }
                    ]
                });
            }

            // Initialize popover when the page is loaded
            $('body').on('mouseenter', '[data-bs-toggle="popover"]', function () {
                $(this).popover('show');
            });

            $('body').on('mouseleave', '[data-bs-toggle="popover"]', function () {
                $(this).popover('hide');
            });
        });
        document.getElementById('deleteSelectedBtn').addEventListener('click', function () {
            $('#deleteModal').modal('show');
        });

        // Event untuk konfirmasi penghapusan
        document.getElementById('confirmDeleteBtn').addEventListener('click', function () {
            var status = $('#statusDropdown').val();
            Swal.fire({
                title: 'Are you sure want to delete this data new hire?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteByStatus", "NewHires")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ status: status }), // Ensure correct JSON format
                        success: function (data) {
                            $('#deleteModal').modal('hide');
                            $('#table').bootstrapTable('refresh');
                            if (data.success) {
                                Swal.fire('Deleted!', 'Selected new hires have been deleted.', 'success');
                            } else {
                                Swal.fire('Failed!', data.message, 'error');
                            }
                        },
                        error: function () {
                            $('#deleteModal').modal('hide');
                            Swal.fire('Error!', 'An error occurred while deleting the selected new hires.', 'error');
                        }
                    });
                }
            });
        });
    </script>
}

@{
    ViewData["Title"] = "Asset Requests";
}
<link href="~/vendor/bootstrap-table/bootstrap-table.min.css" rel="stylesheet" />
<link href="~/vendor/bootstrap-table/bootstrap-table-sticky-header.css" rel="stylesheet" />

<div class="row gutters mt-4">
    <div class="card">
        <div class="card-header text-center" style="font-size: 1.00rem;">Asset Request Form</div>
        <hr class="m-0" />
        <div class="card-body">
            <!-- Breadcrumb -->
            <partial name="_Breadcrumb" />
            <!-- Toolbar -->
            <div id="toolbar" class="d-flex">
                <div class="btn-group me-2">
                    @if (User.IsInRole("UserAdmin") || User.IsInRole("UserEmployee"))
                    {
                        <a class="btn btn-success me-2" asp-action="Create">Add New</a>
                    }
                    @if (User.IsInRole("UserAdmin") || User.IsInRole("UserManagerIT") || User.IsInRole("UserIntern"))
                    {
                        <button id="exportPdfBtn" class="btn btn-info me-2">PDF</button>
                        <button id="deleteSelectedBtn" class="btn btn-danger">Delete</button>
                    }
                </div>
            </div>
            <table id="table"
                   data-toggle="table"
                   data-locale="en-US"
                   data-sticky-header="true"
                   data-sticky-header-offset-y="60"
                   data-search="true"
                   data-toolbar="#toolbar"
                   data-search-highlight="true"
                   data-search-align="right"
                   data-show-toggle="true"
                   data-show-refresh="true"
                   data-show-columns="true"
                   data-buttons="[]"
                   data-key-events="true"
                   data-url="@Url.Action("GetData", "AssetRequests")"
                   data-pagination="true"
                   data-show-columns-toggle-all="true"
                   data-pagination-loop="false"
                   data-pagination-pre-text="Previous"
                   data-pagination-next-text="Next"
                   data-page-size="50"
                   data-filter-control="true">
                <thead>
                    <tr>
                        <th data-field="state" data-checkbox="true"></th>
                        <th data-field="name" data-sortable="true" data-width="200">Name</th>
                        <th data-field="departement" data-sortable="true" data-width="150">Departement</th>
                        <th data-field="type" data-sortable="true" data-width="100">Type</th>
                        <th data-field="serialNumber" data-sortable="true" data-width="150">Serial Number</th>
                        <th data-field="baseline" data-sortable="true" data-width="150">Baseline</th>
                        <th data-field="usageLocation" data-sortable="true" data-width="150">Usage Location</th>
                        <th data-field="reason" data-sortable="true" data-width="300">Reason</th>
                        <th data-field="justify" data-sortable="true" data-width="200">Justify</th>
                        <th data-field="typeReplace" data-sortable="true" data-width="200">Type Replace</th>
                        <th data-field="requestDate" data-sortable="true" data-width="150">Request Date</th>
                        <th data-field="status" data-sortable="true" data-formatter="statusFormatter" class="text-center" data-width="150">Status</th>
                        <th data-field="approvalDate" data-sortable="true" data-width="150">Approval Date</th>
                        <th data-formatter="viewFormatter" class="text-center no-space-three text-nowrap" data-width="100">Actions</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<!-- Modal for Delete -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Delete Selected Requests</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="deleteForm">
                    <div class="form-group">
                        <label for="statusDropdown">Select status to delete:</label>
                        <select id="statusDropdown" class="form-select">
                            <option value="approved">Approved</option>
                            <option value="rejected">Rejected</option>
                            <option value="waiting">Waiting for Approval</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmDeleteBtn" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for PDF Export -->
<div class="modal fade" id="pdfModal" tabindex="-1" role="dialog" aria-labelledby="pdfModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="pdfModalLabel">Export Requests to PDF</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="pdfForm">
                    <div class="form-group">
                        <label for="statusPdfDropdown">Select status to export:</label>
                        <select id="statusPdfDropdown" class="form-select">
                            <option value="approved">Approved</option>
                            <option value="rejected">Rejected</option>
                            <option value="waiting">Waiting for Approval</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmPdfBtn" class="btn btn-info">Export PDF</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/vendor/bootstrap-table/bootstrap-table.min.js"></script>
    <script src="~/vendor/bootstrap-table/bootstrap-table-sticky-header.min.js"></script>
    <script src="~/vendor/bootstrap-table/bootstrap-table-filter-control.min.js"></script>
    <script src="~/vendor/sweetalert2/sweetalert2.all.min.js"></script>
    <script src="~/vendor/notyf/notyf.min.js"></script>

    <script>
        var notyf = new Notyf({
            position: {
                x: 'center',
                y: 'top',
            },
            duration: 3000,
            dismissible: true,
            types: [
                {
                    type: 'success',
                    background: 'green',
                    icon: false
                },
                {
                    type: 'error',
                    background: 'red',
                    icon: false
                }
            ]
        });

        function statusFormatter(value, row, index) {
            let statusHtml;
            if (value === null) {
                statusHtml = '<span class="badge rounded-pill text-bg-warning" style="line-height: 1; vertical-align: middle;">Waiting for Approval</span>';
            } else if (value === true) {
                statusHtml = '<span class="badge rounded-pill text-bg-success" style="line-height: 1; vertical-align: middle;">Approved</span>';
            } else {
                statusHtml = '<span class="badge rounded-pill text-bg-danger" style="line-height: 1; vertical-align: middle;">Rejected</span>';
            }
            return statusHtml;
        }

        // Tetapkan variabel di sini untuk menentukan peran pengguna
        var isAdmin = @Json.Serialize(User.IsInRole("UserAdmin"));
        var isManagerIT = @Json.Serialize(User.IsInRole("UserManagerIT"));
        var isEmployee = @Json.Serialize(User.IsInRole("UserEmployee"));
        var isIntern = @Json.Serialize(User.IsInRole("UserIntern"));

        function viewFormatter(value, row, index) {
            var detailsUrl = '@Url.Action("Details", "AssetRequests")' + '/' + row.id;

            var detailsBtn = '<a href="' + detailsUrl + '" class="btn btn-dark btn-sm">Details</a>';

            return detailsBtn;
        }

        // Permintaan Ekspor PDF Hanya untuk Admin, Manager IT dan Intern
        if (isAdmin || isManagerIT || isIntern) {
            document.getElementById('exportPdfBtn').addEventListener('click', function () {
                $('#pdfModal').modal('show');
            });

            document.getElementById('confirmPdfBtn').addEventListener('click', function () {
                var status = $('#statusPdfDropdown').val();
                var { jsPDF } = window.jspdf;
                var doc = new jsPDF();
                $.ajax({
                    url: '@Url.Action("GetDataByStatus", "AssetRequests")',
                    type: 'GET',
                    data: { status: status },
                    success: function (data) {
                        if (data && data.length > 0) {
                            doc.autoTable({
                                head: [['Name', 'Department', 'Serial Number', 'Request Date', 'Status']],
                                body: data.map(request => [
                                    request.name,
                                    request.departement,
                                    request.serialNumber,
                                    request.requestDate,
                                    request.status ? 'Approved' : (request.status === false ? 'Rejected' : 'Waiting for Approval')
                                ])
                            });
                            doc.save('Request Asset Replacement - ' + status + '.pdf');
                        } else {
                            Swal.fire('No Data!', 'No requests found with the selected status.', 'warning');
                        }
                        $('#pdfModal').modal('hide');
                    },
                    error: function () {
                        Swal.fire('Error!', 'An error occurred while fetching the data.', 'error');
                        $('#pdfModal').modal('hide');
                    }
                });
            });
        }

        document.getElementById('deleteSelectedBtn').addEventListener('click', function () {
            var selectedIds = $('#table').bootstrapTable('getSelections').map(row => row.id);
            if (selectedIds.length > 0) {
                $('#deleteModal').modal('show');
            } else {
                Swal.fire('No selection!', 'Please select at least one asset request to delete.', 'error');
            }
        });

        document.getElementById('confirmDeleteBtn').addEventListener('click', function () {
            var selectedIds = $('#table').bootstrapTable('getSelections').map(row => row.id);
            var status = $('#statusDropdown').val();
            if (selectedIds.length > 0) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DeleteSelectedWithStatus", "AssetRequests")',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({ ids: selectedIds, status: status }),
                            success: function (data) {
                                $('#deleteModal').modal('hide');
                                $('#table').bootstrapTable('refresh');
                                if (data.success) {
                                    Swal.fire('Deleted!', 'Selected asset requests have been deleted.', 'success');
                                } else {
                                    Swal.fire('Failed!', data.message, 'error');
                                }
                            },
                            error: function () {
                                $('#deleteModal').modal('hide');
                                Swal.fire('Error!', 'An error occurred while deleting the selected asset requests.', 'error');
                            }
                        });
                    }
                });
            } else {
                Swal.fire('No selection!', 'Please select at least one asset request to delete.', 'error');
            }
        });

        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                notyf.success(successMessage);
            }
        });
    </script>
}

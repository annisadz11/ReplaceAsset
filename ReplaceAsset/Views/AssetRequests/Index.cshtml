@{
    ViewData["Title"] = "Asset Requests";
}
<link href="~/vendor/bootstrap-table/bootstrap-table.min.css" rel="stylesheet" />
<link href="~/vendor/bootstrap-table/bootstrap-table-sticky-header.css" rel="stylesheet" />

<div class="row gutters mt-4">
    <div class="card">
        <div class="card-header text-center" style="font-size: 1.00rem;">Asset Request Form</div>
        <hr class="m-0" />
        <div class="card-body">
            <!-- Breadcrumb -->
            <partial name="_Breadcrumb" />
            <!-- Toolbar -->
            <div id="toolbar">
                <div class="btn-group me-2">
                    @if (User.IsInRole("UserAdmin") || User.IsInRole("UserEmployee"))
                    {
                        <a class="btn btn-primary" asp-action="Create">Add New Request</a>
                    }
                </div>
            </div>
            <table id="table"
                   data-toggle="table"
                   data-locale="en-US"
                   data-sticky-header="true"
                   data-sticky-header-offset-y="60"
                   data-search="true"
                   data-toolbar="#toolbar"
                   data-search-highlight="true"
                   data-search-align="right"
                   data-show-toggle="true"
                   data-show-refresh="true"
                   data-show-columns="true"
                   data-buttons="[]"
                   data-key-events="true"
                   data-url="@Url.Action("GetData", "AssetRequests")"
                   data-pagination="true"
                   data-show-columns-toggle-all="true"
                   data-pagination-loop="false"
                   data-pagination-pre-text="Previous"
                   data-pagination-next-text="Next"
                   data-page-size="50"
                   data-filter-control="true">
                <thead>
                    <tr>
                        <th data-field="name" data-sortable="true" data-width="200">Name</th>
                        <th data-field="departement" data-sortable="true" data-width="150">Departement</th>
@*                         <th data-field="emailUser" data-sortable="true" data-width="150">Email User</th>
 *@@*                         <th data-field="type" data-sortable="true" data-width="100">Type</th>
 *@                        <th data-field="serialNumber" data-sortable="true" data-width="150">Serial Number</th>
@*                         <th data-field="baseline" data-sortable="true" data-width="150">Baseline</th>
                         <th data-field="usageLocation" data-sortable="true" data-width="150">Usage Location</th>
                         <th data-field="reason" data-sortable="true" data-width="300">Reason</th>
                        <th data-field="justify" data-sortable="true" data-width="200">Justify</th>
 *@                       <th data-field="typeReplace" data-sortable="true" data-width="200">Type Replace</th>
                        <th data-field="requestDate" data-sortable="true" data-width="150">Request Date</th>
                        <th data-field="status" data-sortable="true" data-formatter="statusFormatter" class="text-center" data-width="150">Status</th>
                        <th data-field="approvalDate" data-sortable="true" data-width="150">Approval Date</th>
                        <th data-formatter="viewFormatter" class="text-center no-space-three text-nowrap" data-width="100">Actions</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/vendor/bootstrap-table/bootstrap-table.min.js"></script>
    <script src="~/vendor/bootstrap-table/bootstrap-table-sticky-header.min.js"></script>
    <script src="~/vendor/bootstrap-table/bootstrap-table-filter-control.min.js"></script>
    <script src="~/vendor/sweetalert2/sweetalert2.all.min.js"></script>
    <script src="~/vendor/notyf/notyf.min.js"></script>

    <script>
        var notyf = new Notyf({
            position: {
                x: 'center',
                y: 'top',
            },
            duration: 3000,
            dismissible: true,
            types: [
                {
                    type: 'success',
                    background: 'green',
                    icon: false
                },
                {
                    type: 'error',
                    background: 'red',
                    icon: false
                }
            ]
        });

        function statusFormatter(value, row, index) {
            let statusHtml;
            if (value === null) {
                statusHtml = '<span class="badge rounded-pill text-bg-secondary" style="line-height: 1; vertical-align: middle;">Waiting for Approval</span>';
            } else if (value === true) {
                statusHtml = '<span class="badge rounded-pill text-bg-success" style="line-height: 1; vertical-align: middle;">Approved</span>';
            } else {
                statusHtml = '<span class="badge rounded-pill text-bg-danger" style="line-height: 1; vertical-align: middle;">Rejected</span>';
            }
            return statusHtml;
        }

        // Tetapkan variabel di sini untuk menentukan peran pengguna
        var isAdmin = @Html.Raw(Json.Serialize(User.IsInRole("UserAdmin")));
        var isManagerIT = @Html.Raw(Json.Serialize(User.IsInRole("UserManagerIT")));
        var isEmployee = @Html.Raw(Json.Serialize(User.IsInRole("UserEmployee")));
        var isIntern = @Html.Raw(Json.Serialize(User.IsInRole("UserIntern")));

        function viewFormatter(value, row, index) {
            var editUrl = '@Url.Action("Edit", "AssetRequests")' + '/' + row.id;
            var deleteUrl = '@Url.Action("Delete", "AssetRequests")' + '/' + row.id;
            var detailsUrl = '@Url.Action("Details", "AssetRequests")' + '/' + row.id;


            var editBtn = '<a href="' + editUrl + '" class="btn btn-sm btn-warning">Edit</a>';
            var deleteBtn = '<button class="btn btn-sm btn-danger" onclick="confirmDelete(' + row.id + ')">Delete</button>';
            var detailsBtn = '<a href="' + detailsUrl + '" class="btn btn-sm btn-info">Details</a>';

            if (isAdmin) {
                return detailsBtn + ' ' + editBtn + ' ' + deleteBtn;
            } else if (isManagerIT || isIntern) {
                return detailsBtn + ' ' + deleteBtn;
            } else if (isEmployee) {
                return detailsBtn;
            }
            return detailsBtn;
        }

        function confirmDelete(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post('@Url.Action("DeleteConfirmed", "AssetRequests")', { id: id }, function (data) {
                        if (data.success) {
                            $('#table').bootstrapTable('refresh');
                            Swal.fire('Deleted!', 'Your file has been deleted.', 'success');
                        } else {
                            Swal.fire('Failed!', 'There was an error deleting the asset request.', 'error');
                        }
                    });
                }
            });
        }

        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                notyf.success(successMessage);
            }
        });
    </script>
}